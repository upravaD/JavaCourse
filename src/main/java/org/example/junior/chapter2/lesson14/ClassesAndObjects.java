package org.example.junior.chapter2.lesson14;

/**
 * <h1><i> Java for beginners. <i/>
 * <h2> Chapter 2: "Объектно-ориентированное программирование".
 * <h3> Lesson 14: "Классы и объекты".
 *
 * <p> Объектно-ориентированное программирование (ООП) — методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса, а классы образуют иерархию наследования. </p>
 * <ul>
 *      <li><p> Объектно-ориентированное программирование использует в качестве основных логических конструктивных элементов объекты, а не алгоритмы; </p></li>
 *      <li><p> Каждый объект является экземпляром определенного класса. </p></li>
 *      <li><p> Классы образуют иерархии. </p></li>
 * </ul>
 * <p> Согласно парадигме ООП программа состоит из объектов, обменивающихся сообщениями. Объекты могут обладать состоянием, единственный способ изменить состояние объекта - послать ему сообщение, в ответ на которое, объект может изменить собственное состояние. </p>
 * <p> Класс — это шаблонная конструкция, которая позволяет описать в программе объект, его свойства (атрибуты или поля класса) и поведение (методы класса). Каждый класс имеет своё имя, чтобы в будущем к нему можно было обратиться. Чтобы создать класс на Java, необходимо написать слово {@code class}, дать ему название и поставить фигурные скобки: {@code class{}}. </p>
 * <p> Объект в Java — это область памяти, которая содержит переменные, объявленные в классе (поля класса). </p>
 * <br>
 * <p> Синтаксис создания объекта:  </p>
 * <blockquote><pre>
 * {@code Класс имя = new Класс(параметры);}
 * </pre></blockquote>
 *
 * @author upravaD
 * @version JDK 18
 * @see <a href="https://docs.oracle.com/javase/tutorial/java/javaOO">Документация Oracle</href>
 * @see <a href="https://javarush.com/groups/posts/1949-znakomstvo-s-klassami-napisanie-sobstvennihkh-klassov-konstruktorih">JavaRush</href>
 * @see <a href="https://swiftbook.org/courses/416/lectures/4558">SwiftBook</href>
 * @see <a href="https://www.youtube.com/watch?v=DiCrMi94HXk&list=PLEgFBkSxIsb_e5glouz33gQHs1e8t1nkV&index=12">YouTube</href>
 **/

public class ClassesAndObjects { //Основной класс программы, который совпадает с именем файла .java
    public static void main(String[] args) {
        //Создание экземпляра класса User.
        Person person = new Person();

        //Инициализация полей класса User.
        person.age = 35;
        person.name = "Андрей";

        //Вывод в консоль.
        System.out.println("Меня зовут " + person.name + ", мне " + person.age + " лет.");
    }
}
class Person { //Подкласс программы, который представляет собой Пользователя и содержит в себе данные о нем.
    int age; //Возраст.
    String name; //Имя.
    protected Person(){}
}
